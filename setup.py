# Auto generated by ct-mksetup
# Do not edit this file, edit ./project.py instead

from setuptools import setup
setup(
    **{   'author': 'VIB/BEG/UGent',
    'author_email': 'tidie@psb.vib-ugent.be',
    'classifiers': [   'Development Status :: 2 - Pre-Alpha',
                       "'Intended Audience :: Science/Research',",
                       'License :: OSI Approved',
                       'License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)',
                       'Natural Language :: English',
                       'Environment :: Console',
                       'Topic :: Scientific/Engineering :: Bio-Informatics',
                       'Topic :: Scientific/Engineering :: Artificial Intelligence',
                       'Operating System :: POSIX',
                       'Operating System :: POSIX :: AIX',
                       'Operating System :: POSIX :: BSD',
                       'Operating System :: POSIX :: BSD :: BSD/OS',
                       'Operating System :: POSIX :: BSD :: FreeBSD',
                       'Operating System :: POSIX :: BSD :: NetBSD',
                       'Operating System :: POSIX :: BSD :: OpenBSD',
                       'Operating System :: POSIX :: GNU Hurd',
                       'Operating System :: POSIX :: HP-UX',
                       'Operating System :: POSIX :: IRIX',
                       'Operating System :: POSIX :: Linux',
                       'Operating System :: POSIX :: Other',
                       'Operating System :: POSIX :: SCO',
                       'Operating System :: POSIX :: SunOS/Solaris',
                       'Operating System :: Unix',
                       'Programming Language :: Python',
                       'Programming Language :: Python :: 3',
                       'Programming Language :: Python :: 3 :: Only',
                       'Programming Language :: Python :: 3.2',
                       'Programming Language :: Python :: 3.3',
                       'Programming Language :: Python :: 3.4',
                       'Programming Language :: Python :: 3.5',
                       'Programming Language :: Python :: Implementation',
                       'Programming Language :: Python :: Implementation :: CPython',
                       'Programming Language :: Python :: Implementation :: Stackless'],
    'description': 'Genome analysis platform',
    'entry_points': {'console_scripts': ['dbg = deep_blue_genome.main:main']},
    'extras_require': {   'dev': ['sphinx', 'numpydoc', 'sphinx-rtd-theme'],
                          'test': [   'pytest',
                                      'pytest-env',
                                      'pytest-xdist',
                                      'pytest-cov',
                                      'coverage-pth',
                                      'pytest-benchmark',
                                      'pytest-timeout',
                                      'freezegun>0.3.5',
                                      'networkx']},
    'install_requires': [   'click',
                            'numpy',
                            'matplotlib',
                            'scipy',
                            'scikit-learn',
                            'pandas',
                            'numexpr',
                            'bottleneck',
                            'plumbum',
                            'inflection',
                            'more-itertools',
                            'memory-profiler',
                            'psutil',
                            'pyxdg',
                            'frozendict',
                            'requests',
                            'sqlalchemy',
                            'pymysql',
                            'chicken-turtle-util'],
    'keywords': 'bioinformatics genome-analysis',
    'license': 'LGPL3',
    'long_description': 'Deep Blue Genome Core (DBG Core) is ... TODO\n'
                        '\n'
                        'Features\n'
                        '========\n'
                        '\n'
                        'TODO feature overview\n'
                        '\n'
                        'Links\n'
                        '=====\n'
                        '\n'
                        '-  `Documentation <http://pythonhosted.org/dbg_core/>`__\n'
                        '-  `PyPI <https://pypi.python.org/pypi/dbg_core/>`__\n'
                        '-  `GitLab <https://github.com/timdiels/dbg_core/>`__ TODO\n'
                        '\n'
                        'Project decisions\n'
                        '=================\n'
                        '\n'
                        'TODO this belongs in a separate doc, link to it from links e.g. or\n'
                        'rather in Developer doc\n'
                        '\n'
                        'We use the same decisions and docstring convention as used in `Chicken\n'
                        'Turtle Util <https://github.com/timdiels/chicken_turtle_util/>`__.\n'
                        '\n'
                        'DBG database is a MySQL database. Though we use sqlalchemy, supporting\n'
                        'other databases would require to check for MySQL specific SQL, any\n'
                        'reliance on MySQL default configuration and DB limits.\n'
                        '\n'
                        'parse package understands various file formats, but does not use the\n'
                        'database. This offers users some basics without requiring them to set up\n'
                        'a database. For more advanced use, the parsed data is loaded in the\n'
                        'database, then returned from the database in its structured form with\n'
                        'all bells and whistles. The idea here is that advanced features require\n'
                        'a database to work memory efficiently. For single-use data you would\n'
                        "indeed have to add, use, then remove (as it's no longer needed) the data\n"
                        'from the database.\n'
                        '\n'
                        "'Large' (>1M) blobs of data that are always fetched as a whole (e.g.\n"
                        'gene expression data) are stored in regular binary files on the file\n'
                        'system where the OS can cache them. This is more efficient (See\n'
                        'http://research.microsoft.com/apps/pubs/default.aspx?id=64525), but\n'
                        'comes at the cost of some added complexity when loading the data (you\n'
                        'first have to get the path to the file from the database, then load the\n'
                        'file).\n',
    'name': 'deep-blue-genome-core',
    'package_data': {   'deep_blue_genome': ['data/coexpnetviz/README.txt', 'data/coexpnetviz/coexpnetviz_style.xml'],
                        'deep_blue_genome.core': ['data/core.defaults.conf']},
    'package_name': 'deep_blue_genome.core',
    'packages': [   'deep_blue_genome',
                    'deep_blue_genome.util',
                    'deep_blue_genome.data_preparation',
                    'deep_blue_genome.core',
                    'deep_blue_genome.core.tests',
                    'deep_blue_genome.core.parse',
                    'deep_blue_genome.core.database'],
    'pre_commit_no_ignore': ['test.conf'],
    'url': 'https://bitbucket.org/deep_blue_genome/deep_blue_genome',
    'version': '0.0.0'}
)
